
//! Autogenerated weights for pallet_poe
//!
//! THIS FILE WAS AUTO-GENERATED USING THE SUBSTRATE BENCHMARK CLI VERSION 3.0.0
//! DATE: 2021-09-25, STEPS: `[1, ]`, REPEAT: 50000, LOW RANGE: `[]`, HIGH RANGE: `[]`
//! EXECUTION: Some(Wasm), WASM-EXECUTION: Compiled, CHAIN: Some("dev"), DB CACHE: 128

// Executed Command:
// ./target/release/node-template
// benchmark
// --chain=dev
// --execution=wasm
// --wasm-execution=compiled
// --pallet=pallet_poe
// --extrinsic=*
// --steps=1
// --repeat=50000
// --output=./pallets/poe/src/weights.rs


#![allow(unused_parens)]
#![allow(unused_imports)]

use frame_support::{traits::Get, weights::{Weight, constants::RocksDbWeight}};
use sp_std::marker::PhantomData;

pub trait WeightInfo {
	fn create_claim(s: u32, ) -> Weight;
	fn revoke_claim(s: u32, ) -> Weight;
	fn transfer_claim(s: u32, ) -> Weight;
}

/// Weight functions for pallet_poe.
pub struct ExtrinsicWeightInfo<T>(PhantomData<T>);
impl<T: frame_system::Config> WeightInfo for ExtrinsicWeightInfo<T> {
	fn create_claim(s: u32, ) -> Weight {
		(29_337_000 as Weight)
			// Standard Error: 0
			.saturating_add((21_000 as Weight).saturating_mul(s as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn revoke_claim(s: u32, ) -> Weight {
		(31_637_000 as Weight)
			// Standard Error: 0
			.saturating_add((27_000 as Weight).saturating_mul(s as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
	fn transfer_claim(s: u32, ) -> Weight {
		(34_579_000 as Weight)
			// Standard Error: 0
			.saturating_add((31_000 as Weight).saturating_mul(s as Weight))
			.saturating_add(T::DbWeight::get().reads(1 as Weight))
			.saturating_add(T::DbWeight::get().writes(1 as Weight))
	}
}

impl WeightInfo for () {
	fn create_claim(s: u32, ) -> Weight {
		(29_337_000 as Weight)
			// Standard Error: 0
			.saturating_add((21_000 as Weight).saturating_mul(s as Weight))
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	fn revoke_claim(s: u32, ) -> Weight {
		(31_637_000 as Weight)
			// Standard Error: 0
			.saturating_add((27_000 as Weight).saturating_mul(s as Weight))
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
	fn transfer_claim(s: u32, ) -> Weight {
		(34_579_000 as Weight)
			// Standard Error: 0
			.saturating_add((31_000 as Weight).saturating_mul(s as Weight))
			.saturating_add(RocksDbWeight::get().reads(1 as Weight))
			.saturating_add(RocksDbWeight::get().writes(1 as Weight))
	}
}
